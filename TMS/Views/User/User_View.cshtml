@model PagedList.IPagedList<TMS.Models.TaskViewModel>
@using PagedList.Mvc

@{
    ViewBag.Title = "User Tasks";
}

<div class="container mt-4 pe-5">
    <div class="container bg-dark text-white rounded shadow">
        <h4 class="text-white p-1">Tasks for @ViewBag.SelectedUser</h4>
    </div>

    <!-- Search and Filter -->
    <form method="get" action="@Url.Action("User_View", "User")" class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex gap-2 w-50">

            <!-- Status Filter -->
            <select class="form-select border border-primary w-50 p-2" name="statusFilter">
                <option value="">All Status</option>
                <option value="Pending" @(ViewBag.StatusFilter == "Pending" ? "selected" : "")>Pending</option>
                <option value="In Progress" @(ViewBag.StatusFilter == "In Progress" ? "selected" : "")>In Progress</option>
                <option value="Completed" @(ViewBag.StatusFilter == "Completed" ? "selected" : "")>Completed</option>
            </select>

            <!-- Search Input -->
            <div class="input-group flex-grow-1">
                <input type="text" class="form-control border border-primary" placeholder="Search tasks..." name="searchQueryTask" value="@ViewBag.SearchQuery">
                <button class="btn btn-outline-primary" type="submit">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
    </form>

    <!-- Task Table -->
    <table class="table table-striped table-hover table-sm small">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Title</th>
                <th>Task Type</th>
                <th>Created By</th>
                <th>Dates</th>
                <th>Priority</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int index = 1;
                foreach (var task in Model)
                {
                    <tr>
                        <td>@index</td>
                        <td>@task.Title</td>
                        <td>@task.TaskType</td>
                        <td>@task.CreatedBy</td>
                        <td>
                            <div class="small text-muted">
                                Start: <span class="fw-normal">@(task.StartDate != null ? task.StartDate.ToString("dd/MM/yyyy") : "N/A")</span>
                            </div>
                            <div class="small text-muted">
                                Due: <span class="fw-normal">@(task.DueDate != null ? task.DueDate.ToString("dd/MM/yyyy") : "N/A")</span>
                            </div>
                        </td>
                        <td>
                            <span class="badge @(task.Priority == "High" ? "bg-danger" : task.Priority == "Medium" ? "bg-warning" : "bg-success")">
                                @task.Priority
                            </span>
                        </td>
                        <td>
                            <span class="badge @(task.Status == "Completed" ? "bg-success" : task.Status == "In Progress" ? "bg-primary" : "bg-warning")">
                                @task.Status
                            </span>
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">No tasks found for this user</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <span class="text-muted">Showing @Model.Count() tasks</span>

        <nav aria-label="Task pagination">
            <ul class="pagination pagination-sm mb-0">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("User_View", new { userId = ViewBag.SelectedUserId, page = 1, searchQueryTask = ViewBag.SearchQuery, statusFilter = ViewBag.StatusFilter })">&laquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("User_View", new { userId = ViewBag.SelectedUserId, page = Model.PageNumber - 1, searchQueryTask = ViewBag.SearchQuery, statusFilter = ViewBag.StatusFilter })">‹</a>
                    </li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("User_View", new { userId = ViewBag.SelectedUserId, page = i, searchQueryTask = ViewBag.SearchQuery, statusFilter = ViewBag.StatusFilter })">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("User_View", new { userId = ViewBag.SelectedUserId, page = Model.PageNumber + 1, searchQueryTask = ViewBag.SearchQuery, statusFilter = ViewBag.StatusFilter })">›</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("User_View", new { userId = ViewBag.SelectedUserId, page = Model.PageCount, searchQueryTask = ViewBag.SearchQuery, statusFilter = ViewBag.StatusFilter })">&raquo;</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

@Html.Partial("~/Views/Shared/_Sidebar.cshtml")
@Html.Action("GetUsersList", "User")
